name: сборка и релиз

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: проверка кода
        uses: actions/checkout@v4

      - name: установка зависимостей
        run: |
          sudo apt update
          sudo apt install -y gperf g++ cmake wget build-essential

      - name: загрузка и установка zlib
        run: |
          wget https://zlib.net/current/zlib.tar.gz
          tar -xvf zlib.tar.gz

          ZLIB_DIR=$(tar -tf zlib.tar.gz | head -1 | cut -f1 -d"/")
          echo "загружена директория zlib: $ZLIB_DIR"
          cd $ZLIB_DIR
          ./configure --static
          make
          sudo make install
          cd ..

      - name: загрузка и установка OpenSSL
        run: |
          # Получаем ссылку на последний релиз OpenSSL
          OPENSSL_VERSION=$(curl -s https://api.github.com/repos/openssl/openssl/releases/latest | jq -r .tag_name)
          echo "Загрузка OpenSSL версии $OPENSSL_VERSION"
          
          # Скачиваем последнюю версию OpenSSL
          wget https://github.com/openssl/openssl/releases/download/$OPENSSL_VERSION/${OPENSSL_VERSION#v}.tar.gz
          tar -xvf openssl-${OPENSSL_VERSION#v}.tar.gz
          cd openssl-${OPENSSL_VERSION#v}
          
          # Собираем OpenSSL как статическую библиотеку
          ./config no-shared --prefix=/usr/local/openssl
          make
          sudo make install
          cd ..

      - name: клонирование репо и сборка бинарника
        run: |
          git clone --recursive https://github.com/tdlib/telegram-bot-api.git
          cd telegram-bot-api
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release \
                -DBUILD_SHARED_LIBS=OFF \
                -DOPENSSL_ROOT_DIR=/usr/local/openssl \
                -DOPENSSL_LIBRARIES=/usr/local/openssl/lib \
                -DZLIB_ROOT=/usr/local \
                -DCMAKE_CXX_FLAGS="-static" \
                -DCMAKE_EXE_LINKER_FLAGS="-static" ..
          cmake --build . --target install

      - name: проверка скомпилированного бинарника
        run: |
          cd telegram-bot-api/build
          ldd ./telegram-bot-api || true
